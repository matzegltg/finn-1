import numpy as np

x = np.array([1.2749e-02])
A = np.array([[-0.2123],
        [ 0.7632],
        [ 0.6061],
        [-0.2302],
        [-0.4039],
        [-0.0619],
        [-0.1487],
        [-0.8436],
        [ 0.1615],
        [ 0.5252]])

b = np.array([-0.0103, -0.0288, -0.7091,  0.6184,  0.5108,  0.0405,  0.3280,  0.4733,
         0.4700,  0.1913])
alpha = np.tanh(np.matmul(x,np.transpose(A)) + b)

B = np.array([[-0.0543, -0.1803,  0.1581, -0.2396, -0.2330,  0.2594,  0.0542,  0.1168,
          0.0425, -0.1509],
        [ 0.1785, -0.2587, -0.2303, -0.0706, -0.0923,  0.1807,  0.3103, -0.1983,
          0.2281,  0.1351],
        [-0.0874, -0.1982, -0.1365, -0.0764,  0.1946,  0.0627,  0.2511, -0.2438,
         -0.2622,  0.2455],
        [-0.1274,  0.2641, -0.1902, -0.2583,  0.0743, -0.2016,  0.1333, -0.2470,
          0.0479, -0.2463],
        [-0.2992, -0.2876, -0.0033, -0.0403, -0.0859,  0.1566,  0.1927,  0.0883,
          0.0327,  0.1877],
        [-0.2495,  0.1287,  0.2822, -0.0136, -0.1346, -0.1415, -0.2012,  0.0363,
         -0.2657, -0.2476],
        [-0.0158, -0.1786, -0.2761, -0.0252, -0.1839,  0.0790, -0.2744,  0.0537,
         -0.0529,  0.1020],
        [ 0.2971, -0.0556,  0.1809, -0.2431,  0.2362,  0.0661,  0.1474, -0.2605,
          0.2991,  0.0175],
        [ 0.3009, -0.1509,  0.1282, -0.2196,  0.0066, -0.2027,  0.1076, -0.0208,
         -0.2944, -0.1744],
        [-0.2567, -0.0416,  0.0313, -0.0010, -0.0434, -0.0282,  0.0371,  0.2189,
         -0.2271, -0.0855],
        [-0.1505, -0.0947,  0.1506, -0.1874,  0.0306,  0.1515,  0.3025,  0.3014,
          0.2241, -0.3005],
        [-0.1954, -0.1800,  0.0335,  0.1904, -0.2584, -0.3016, -0.2681, -0.1955,
          0.2520, -0.1898],
        [-0.0680, -0.0756, -0.2832, -0.0682,  0.3131, -0.1302,  0.2022, -0.2652,
          0.0997, -0.0432],
        [ 0.0118,  0.2425, -0.1855,  0.2394, -0.0850,  0.2587,  0.1219, -0.0687,
          0.1698,  0.1453],
        [-0.1484,  0.1667,  0.2782, -0.1448,  0.1283, -0.0223, -0.1658, -0.0458,
         -0.2319,  0.1348],
        [ 0.1817,  0.1840, -0.2798,  0.1730,  0.0922, -0.0706,  0.1236,  0.1216,
          0.2496,  0.2764],
        [ 0.0674,  0.1962,  0.3111,  0.1694,  0.0416, -0.2240, -0.0987,  0.1382,
          0.0787, -0.2355],
        [-0.2311,  0.0143,  0.2887, -0.1371, -0.1265,  0.1983, -0.1558, -0.1913,
         -0.3146, -0.1207],
        [-0.0883, -0.2351, -0.2537, -0.2132,  0.2631, -0.3091, -0.0246, -0.2018,
          0.3088,  0.2926],
        [ 0.0043, -0.1992,  0.2137, -0.2354, -0.2221,  0.0870,  0.1503,  0.3151,
         -0.1961, -0.1015]])
c = np.array([ 0.2751, -0.1207, -0.0860,  0.2824, -0.1745, -0.1837,  0.0928, -0.2598,
         0.2532,  0.0728,  0.0839,  0.1108, -0.1411, -0.0073, -0.1446,  0.1950,
        -0.1786, -0.2564,  0.1272, -0.2246])

beta = np.tanh(np.matmul(alpha, np.transpose(B))+c)

C = np.array([[ 4.3866e-03,  5.5928e-02,  1.5369e-02, -1.4162e-01,  5.6830e-02,
          2.4758e-02,  1.1489e-01,  1.5270e-01, -1.2884e-01,  3.7346e-02,
         -1.8574e-01, -6.6967e-02,  1.8727e-03, -1.6592e-01, -1.8684e-01,
         -3.0401e-04,  5.2668e-02,  9.9491e-02, -8.4181e-02, -1.5863e-01],
        [-3.7754e-02, -1.0947e-01, -2.1518e-01, -1.3628e-01,  8.5636e-02,
          2.0837e-01,  1.5914e-03,  3.3497e-02,  2.1014e-01, -7.0783e-02,
          2.1606e-01,  1.6849e-01,  9.7966e-02,  1.7438e-01,  2.0388e-03,
          5.0925e-02,  5.2520e-02,  1.3156e-01, -1.4030e-01, -2.0270e-01],
        [ 2.0713e-01,  2.4253e-02,  8.9459e-02,  1.0205e-01, -8.4929e-02,
         -8.7641e-02, -1.0328e-01,  2.2270e-01,  1.5702e-01,  2.0505e-01,
         -1.0686e-01, -1.4659e-01,  3.9240e-02,  1.0285e-01, -1.4527e-01,
         -1.9009e-01,  3.8147e-06, -4.5434e-02,  1.1507e-01,  1.6250e-01],
        [-1.3476e-01, -1.8915e-01, -9.2937e-02, -2.0737e-01, -1.8672e-01,
          1.8321e-01,  1.5207e-01, -2.2006e-01, -1.9795e-01,  1.2188e-01,
          7.0701e-02,  7.4806e-03, -1.8755e-01, -1.9179e-01, -7.9037e-02,
          1.8376e-02, -1.8014e-02, -1.3604e-01,  4.7041e-03,  1.4159e-01],
        [ 7.2002e-02,  3.1574e-02, -9.2972e-02, -1.0576e-01,  1.2401e-01,
          1.7161e-01, -2.1194e-01,  1.5099e-01,  4.1954e-02,  1.4683e-01,
          1.4126e-01,  8.6715e-02,  9.6841e-02,  1.2378e-01,  2.2254e-01,
         -7.5522e-02, -8.5789e-02,  1.6806e-01, -3.0042e-02, -1.3924e-01],
        [-9.7179e-02,  9.3298e-02,  1.3393e-02, -1.9251e-01, -1.1678e-01,
         -1.3117e-01, -4.5625e-02,  1.7356e-01,  1.1608e-02,  6.8177e-02,
          1.3119e-01, -4.4601e-02, -1.0212e-01, -6.3982e-02, -2.7878e-02,
          1.9582e-01,  1.5650e-01,  1.6595e-01, -5.2841e-02,  6.3567e-02],
        [-1.3873e-01,  4.9816e-02, -6.6550e-02, -5.1154e-03,  6.7816e-02,
          3.4941e-02,  1.4571e-01, -1.5498e-01,  9.4877e-02,  1.9772e-01,
          2.1711e-01, -1.5616e-01, -1.2507e-01,  1.1226e-01, -5.5647e-02,
         -2.0178e-01, -8.1616e-02,  2.2841e-02,  4.4505e-02, -1.5504e-01],
        [-2.3456e-02,  2.1532e-01,  8.1475e-02, -1.0734e-01, -1.9585e-01,
          2.7156e-02, -1.7773e-01, -8.8277e-02, -8.1471e-02, -2.2356e-01,
         -5.9713e-03, -1.0733e-01, -2.2026e-01, -1.4951e-01,  4.8591e-02,
          1.2637e-01, -1.1794e-01, -2.2097e-01,  1.0066e-01,  6.4598e-02],
        [ 9.7491e-03,  1.6413e-01,  1.3964e-01,  6.0720e-02,  9.2512e-02,
          5.5256e-02, -1.0246e-01, -1.6590e-01, -2.5742e-02,  7.4689e-02,
          1.9234e-01,  1.7282e-01, -1.1737e-01, -9.9878e-02, -4.7379e-02,
          6.0714e-03,  4.3151e-02,  3.4389e-02,  1.0802e-01,  1.0234e-01],
        [ 1.2899e-01, -8.8069e-02,  8.8427e-02,  2.2192e-01,  5.6427e-02,
         -8.5220e-05, -7.8427e-02,  8.4104e-02,  1.6143e-01,  1.5115e-01,
         -9.8143e-02, -2.1668e-01, -6.1940e-02, -1.4747e-01, -7.6726e-02,
         -1.0685e-01, -1.1449e-01, -6.9430e-02,  1.8586e-01,  9.4349e-02]])
d = np.array([ 0.0559, -0.2234,  0.0984,  0.0653, -0.1010,  0.1013,  0.1994,  0.0476,
         0.0687,  0.1846])
gamma = np.tanh(np.matmul(beta,np.transpose(C))+d)

D = np.array([[ 0.2937,  0.1856,  0.2223, -0.2215,  0.0797, -0.0336,  0.1308,  0.0559,
         -0.3105, -0.1863]])

e = np.array([-0.1441])
delta_p = np.matmul(gamma,np.transpose(D))+e

delta = 1/(1+np.exp(-delta_p))

print(delta)


